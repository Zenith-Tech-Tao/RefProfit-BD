import sqlite3
import sys


def init_db():
    conn = sqlite3.connect('referrals.db')
    conn.execute('''
    CREATE TABLE IF NOT EXISTS referrals (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        callback TEXT NOT NULL UNIQUE,
        content TEXT NOT NULL
    )
    ''')
    conn.commit()
    conn.close()


def show_all():
    conn = sqlite3.connect('referrals.db')
    conn.row_factory = sqlite3.Row
    refs = conn.execute('SELECT * FROM referrals').fetchall()
    conn.close()

    print("\nüìã –°–ø–∏—Å–æ–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–∫:")
    for ref in refs:
        print(f"{ref['id']}: {ref['name']} (Callback: {ref['callback']})")
    return bool(refs)


def add_referral():
    print("\n‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª–∫–∏")
    name = input("–ù–∞–∑–≤–∞–Ω–∏–µ: ")
    callback = input("Callback (–Ω–∞–ø—Ä–∏–º–µ—Ä REF_TINKOFF): ")

    print("\n–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç (Ctrl+D –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è):")
    content = sys.stdin.read().strip()

    conn = sqlite3.connect('referrals.db')
    try:
        conn.execute('INSERT INTO referrals (name, callback, content) VALUES (?, ?, ?)',
                     (name, callback, content))
        conn.commit()
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")
    except sqlite3.IntegrityError:
        print("‚ùå –û—à–∏–±–∫–∞: —Ç–∞–∫–æ–π callback —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    finally:
        conn.close()


def edit_referral():
    if not show_all():
        return

    ref_id = input("\n‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ ID –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ")

    conn = sqlite3.connect('referrals.db')
    conn.row_factory = sqlite3.Row
    ref = conn.execute('SELECT * FROM referrals WHERE id = ?', (ref_id,)).fetchone()
    conn.close()

    if not ref:
        print("‚ùå –†–µ—Ñ–µ—Ä–∞–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return

    print(f"\n–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {ref['name']}")
    new_name = input(f"–ù–∞–∑–≤–∞–Ω–∏–µ [{ref['name']}]: ") or ref['name']
    new_callback = input(f"Callback [{ref['callback']}]: ") or ref['callback']

    print("\n–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç:")
    print(ref['content'])
    print("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç (Ctrl+D –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è):")
    new_content = sys.stdin.read().strip() or ref['content']

    conn = sqlite3.connect('referrals.db')
    try:
        conn.execute('''
        UPDATE referrals 
        SET name=?, callback=?, content=?
        WHERE id=?
        ''', (new_name, new_callback, new_content, ref_id))
        conn.commit()
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
    except sqlite3.IntegrityError:
        print("‚ùå –û—à–∏–±–∫–∞: —Ç–∞–∫–æ–π callback —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    finally:
        conn.close()


def delete_referral():
    if not show_all():
        return

    ref_id = input("\nüóëÔ∏è –í–≤–µ–¥–∏—Ç–µ ID –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ")

    conn = sqlite3.connect('referrals.db')
    cur = conn.execute('DELETE FROM referrals WHERE id = ?', (ref_id,))
    conn.commit()
    conn.close()

    if cur.rowcount > 0:
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!")
    else:
        print("‚ùå –†–µ—Ñ–µ—Ä–∞–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")


def main():
    init_db()
    while True:
        print("\nüîß –†–µ–¥–∞–∫—Ç–æ—Ä —Ä–µ—Ñ–µ—Ä–∞–ª–æ–∫")
        print("1. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ")
        print("2. –î–æ–±–∞–≤–∏—Ç—å")
        print("3. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å")
        print("4. –£–¥–∞–ª–∏—Ç—å")
        print("5. –í—ã–π—Ç–∏")

        choice = input("> ")

        if choice == "1":
            show_all()
        elif choice == "2":
            add_referral()
        elif choice == "3":
            edit_referral()
        elif choice == "4":
            delete_referral()
        elif choice == "5":
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥")


if __name__ == "__main__":
    main()