import telebot
from telebot import types
import sqlite3

bot = telebot.TeleBot("7504616814:AAE-toFkzsXufqMIxa-YLuzJhD9P7KfmTSQ")


def get_db_connection():
    conn = sqlite3.connect('referrals.db')
    conn.row_factory = sqlite3.Row
    return conn


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(
        types.KeyboardButton("üè¶ –ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É"),
        types.KeyboardButton("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    )
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –±–∞–Ω–∫–æ–≤. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=markup
    )


@bot.message_handler(func=lambda m: m.text == "üè¶ –ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É")
def show_referrals(message):
    conn = get_db_connection()
    referrals = conn.execute('SELECT name, callback FROM referrals').fetchall()
    conn.close()

    markup = types.InlineKeyboardMarkup()
    for ref in referrals:
        markup.add(types.InlineKeyboardButton(ref['name'], callback_data=ref['callback']))

    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ä—Ç—É:", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def send_referral(call):
    conn = get_db_connection()
    ref = conn.execute('SELECT content FROM referrals WHERE callback = ?', (call.data,)).fetchone()
    conn.close()

    if ref:
        bot.send_message(call.message.chat.id, ref['content'], parse_mode='HTML')
    else:
        bot.send_message(call.message.chat.id, "–†–µ—Ñ–µ—Ä–∞–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    bot.answer_callback_query(call.id)


@bot.message_handler(func=lambda m: m.text == "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
def info(message):
    bot.send_message(
        message.chat.id,
        "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∫–∞—Ä—Ç.\n"
        "–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @support",
        parse_mode='HTML'
    )


if __name__ == "__main__":
    bot.polling(none_stop=True)